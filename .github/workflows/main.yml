# on: [push]

# jobs:
#     deploy_job:
#       runs-on: ubuntu-latest
#       name: deploy
#       steps:
#           - name: "Checkout"
#             uses: actions/checkout@v2

#           - name: Copy to staging directory for deployment
#             run: |
#               mkdir deploy
#               rsync -av --progress . deploy --exclude .git --exclude deploy --exclude .gitignore --exclude .github --exclude server --exclude test-cmd-deploy.js --exclude node_modules --exclude authorize.js --exclude command-deploy.js --exclude .replit
#           - name: "deploy file"
#             uses: wlixcc/SFTP-Deploy-Action@v1.2.4
#             with:
#                 username: ${{secrets.USERNAME}}
#                 server: ${{secrets.SERVER}}
#                 password: ${{ secrets.PASSWORD }} 
#                 port: ${{secrets.PORT}}
#                 local_path: './deploy'
#                 remote_path: './'
#                 sftp_only: true
#                 sftpArgs: '-o ConnectTimeout=5'
#                 # delete_remote_files: true

name: Deploy Files

on:
  push:
    branches:
      - deploy
  # Enables manually triggering of Workflow with file synchronization option
  workflow_dispatch:
    inputs:
      sync:
        description: "File synchronization"
        required: true
        default: "delta"

jobs:
  deploy-master:
    name: "deploy branch"
    if: ${{ github.ref == 'refs/heads/deploy' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: "Copy to staging directory for deployment"
        run: |
          mkdir deploy
          rsync -av --progress . deploy --exclude .git --exclude deploy --exclude .gitignore --exclude .github --exclude server --exclude test-cmd-deploy.js --exclude node_modules --exclude authorize.js --exclude command-deploy.js --exclude .replit
          
      - name: "Deploy"
        uses: milanmk/actions-file-deployer@master
        with:
          remote-protocol: "sftp"
          remote-host: ${{secrets.SERVER}}
          remote-port: ${{secrets.PORT}}
          remote-user: ${{secrets.USERNAME}}
          remote-password: ${{ secrets.PASSWORD }} 
          remote-path: "./"
          local-path: './deploy'
          sync: delta